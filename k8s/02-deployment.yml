---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: k8s-rmq-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      role: producer
  template:
    metadata:
      labels:
        role: producer
      annotations:
        # Enable Prometheus support.
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: producer
          image: alexandreroman/k8s-rmq-producer
          imagePullPolicy: Always
          resources:
            limits:
              memory: 1Gi
          ports:
            - containerPort: 8080
          env:
            # Connect this process to the operator-managed RabbitMQ instance.
            - name: SPRING_RABBITMQ_HOST
              value: rmqdemo-rabbitmq-ingress
            # Inject credentials as environment variables leveraging K8s secrets.
            # These credentials are generated by the operator.
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rmqdemo-rabbitmq-admin
                  key: rabbitmq-username
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rmqdemo-rabbitmq-admin
                  key: rabbitmq-password
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            periodSeconds: 2
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: k8s-rmq-operator
spec:
  replicas: 3
  selector:
    matchLabels:
      role: consumer
  template:
    metadata:
      labels:
        role: consumer
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port:  "8080"
    spec:
      containers:
        - name: consumer
          image: alexandreroman/k8s-rmq-consumer
          imagePullPolicy: Always
          resources:
            limits:
              memory: 1Gi
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: SPRING_RABBITMQ_HOST
              value: rmqdemo-rabbitmq-ingress
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rmqdemo-rabbitmq-admin
                  key: rabbitmq-username
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rmqdemo-rabbitmq-admin
                  key: rabbitmq-password
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            periodSeconds: 2
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 10
